name: 'C++ CI'

on: 
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build_windows:
    runs-on: windows-latest 
    permissions: write-all 
    steps:
      - uses: actions/checkout@v3  
        with:
          submodules: true
      
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }} 
      
      - run: cmake --build . 
      
      - run: cmake --build . --target package 
      
      - name: List files before creating release
        run: dir
      
      # Check if tag exists before creating a release
      - name: Check if tag exists
        run: |
          $tag = "refs/tags/v${{ github.run_number }}"
          if (git rev-parse $tag 2>$null) {
            echo "Tag exists. Skipping release."
            echo "skip_release=true" >> $GITHUB_ENV
          } else {
            echo "skip_release=false" >> $GITHUB_ENV
          }
      
      # Creates release only if the tag does not exist
      - name: Create Release (Windows)
        id: create_release_windows
        if: env.skip_release != 'true'
        uses: actions/create-release@v1 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          tag_name: v${{ github.run_number }}  
          release_name: Release v${{ github.run_number }} (Windows)
          draft: false 
          prerelease: false 
      
      - name: Upload Release Asset (Windows)
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_windows.outputs.upload_url }}
          asset_path: ./laba3-0.0.${{ github.run_number }}-win64.zip  
          asset_name: laba3-0.0.${{ github.run_number }}-win64.zip
          asset_content_type: application/zip
  
  build_ubuntu:
    runs-on: ubuntu-latest  
    permissions: write-all  
    steps:
      - uses: actions/checkout@v3  
        with:
          submodules: true
      
      - run: cmake . -DPATCH_VERSION=${{ github.run_number }}  
      
      - run: cmake --build .  
      
      - run: cmake --build . --target package  
      
      # Check if tag exists before creating a release for Ubuntu
      - name: Check if tag exists for Ubuntu
        run: |
          $tag = "refs/tags/v${{ github.run_number }}"
          if (git rev-parse $tag 2>$null) {
            echo "Tag exists. Skipping Ubuntu release."
            echo "skip_release_ubuntu=true" >> $GITHUB_ENV
          } else {
            echo "skip_release_ubuntu=false" >> $GITHUB_ENV
          }
      
      # Creates release only if the tag does not exist for Ubuntu
      - name: Create Release (Ubuntu)
        id: create_release_ubuntu
        if: env.skip_release_ubuntu != 'true'
        uses: actions/create-release@v1  
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        with:
          tag_name: v${{ github.run_number }}  
          release_name: Release v${{ github.run_number }} (Ubuntu)
          draft: false  
          prerelease: false 
      
      # Uploads the release asset for Ubuntu
      - name: Upload Release Asset (Ubuntu)
        id: upload-release-asset-ubuntu
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_ubuntu.outputs.upload_url }}
          asset_path: ./laba3-0.0.${{ github.run_number }}-Linux.deb  
          asset_name: laba3-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
